{"version":3,"sources":["Styles/Data_statistics.module.css","Styles/TableHead.module.css","Styles/Tbody.module.css","Styles/Form.module.css","Styles/Button.module.css","Styles/Table.module.css","ContextFile/useContext.js","Component/Table/Thead.js","Component/Table/Tbody.jsx","Component/Table/Table.js","Component/Buttons/ButtonGroup.jsx","Component/Form/Form.js","Page/Data_statistics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CollectionContext","React","createContext","CollectionProvider","props","storageData","localStorage","getItem","useState","item","num","price","totalPrice","timestamp","keyHolder","collection","JSON","parse","data","setData","useEffect","jsonState","stringify","setItem","err","console","error","handleLocalStorage","Provider","value","target","name","e","parseStorage","NotRemoved","filter","i","matchIndex","findIndex","splice","total","Number","Date","toDateString","children","Thead","thead","TheadStyles","row","col","useContext","className","map","keys","index","key","Tbody","tbody","TbodyStyles","values","onClick","handleGetId","Table","table","TableStyles","ButtonGroup","container","ButtonStyles","buton","handleFormSubmit","handleDeleteData","handleEditData","handleCache","Form","FormStyles","form","input","handleChange","handleCalculate","type","onChange","required","placeholder","id","onInput","readOnly","Data_statistics","Data_statisticsStyles","wrapper","heading","content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.37a7faa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Data_statistics_container__3g7Bz\",\"heading\":\"Data_statistics_heading__rT65s\",\"wrapper\":\"Data_statistics_wrapper__3iCZD\",\"content\":\"Data_statistics_content__3dGrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thead\":\"TableHead_thead__2iU26\",\"row\":\"TableHead_row__1HZ69\",\"col\":\"TableHead_col__328TX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tbody\":\"Tbody_tbody__3VmtQ\",\"row\":\"Tbody_row__jWj54\",\"col\":\"Tbody_col__2eU-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3ZgaB\",\"form\":\"Form_form__2LfOC\",\"input\":\"Form_input__30wTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__DXrIu\",\"buton\":\"Button_buton__3JLLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2sQAi\"};","import React, { useState, useEffect } from \"react\";\n\nconst CollectionContext = React.createContext([\n  {},\n  () => {},\n  () => {},\n  () => {},\n  () => {},\n  () => {},\n  () => {},\n  () => {},\n]);\n\nconst CollectionProvider = (props) => {\n  //getting and setting the localstorage data to the state on load\n\n  let storageData = localStorage.getItem(\"itemCollection\");\n\n  //declaring of state values\n  const [data, setData] = useState({\n    item: \"\",\n    num: \"\",\n    price: \"\",\n    totalPrice: \"\",\n    timestamp: \"\",\n    keyHolder: null,\n    collection: storageData ? JSON.parse(storageData) : [],\n  });\n\n  //handling the formfield changes\n  const handleChange = ({ target }) => {\n    setData((data) => ({ ...data, [target.name]: target.value }));\n  };\n\n  //getting the total price of the data\n  const handleCalculate = ({ target }) => {\n    let total = Number(data.num) * Number(target.value);\n\n    return data.num\n      ? setData((data) => ({\n          ...data,\n          totalPrice: total,\n          timestamp: new Date().toDateString(),\n        }))\n      : 0;\n  };\n\n  //setting input values to the state\n  const handleFormSubmit = (e) => {\n    // e.preventDefault();\n    const { item, num, price, totalPrice, timestamp } = data;\n    setData((data) => ({\n      ...data,\n      collection: [\n        ...data.collection,\n        { item, num, price, totalPrice, timestamp },\n      ],\n    }));\n  };\n\n  //handling data edition from the localstorage\n  const handleEditData = () => {\n    const parseStorage = JSON.parse(storageData);\n    const { keyHolder, item, num, price, totalPrice, timestamp } = data;\n    let matchIndex = parseStorage.findIndex((value, i) => i === keyHolder);\n    parseStorage.splice(matchIndex, 1, {\n      item,\n      num,\n      price,\n      totalPrice,\n      timestamp,\n    });\n\n    const jsonState = JSON.stringify(parseStorage);\n    localStorage.setItem(\"itemCollection\", jsonState);\n    setData((data) => ({ ...data, collection: parseStorage }));\n  };\n\n  //handle deletion of data from the local storage\n  const handleDeleteData = () => {\n    const parseStorage = JSON.parse(storageData);\n    const { keyHolder } = data;\n    let NotRemoved = parseStorage.filter((value, i) => i !== keyHolder);\n    const jsonState = JSON.stringify(NotRemoved);\n\n    setData((data) => ({ ...data, collection: NotRemoved }));\n    localStorage.setItem(\"itemCollection\", jsonState);\n  };\n\n  const handleCache = () => {\n    setData((data) => ({ ...data, collection: [] }));\n    return localStorage.setItem(\"itemCollection\", []);\n  };\n\n  useEffect(() => {\n    //setting state form field data to local storage\n    const handleLocalStorage = () => {\n      const { collection } = data;\n      try {\n        const jsonState = JSON.stringify(collection);\n        localStorage.setItem(\"itemCollection\", jsonState);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handleLocalStorage();\n  });\n\n  return (\n    <CollectionContext.Provider\n      //assign the provider values\n      value={[\n        data,\n        setData,\n        handleChange,\n        handleFormSubmit,\n        handleDeleteData,\n        handleEditData,\n        handleCalculate,\n        handleCache,\n      ]}\n    >\n      {props.children}\n    </CollectionContext.Provider>\n  );\n};\n\nexport { CollectionContext, CollectionProvider };\n","import React, { useContext } from \"react\";\nimport { CollectionContext } from \"../../ContextFile/useContext\";\nimport TheadStyles from \"../../Styles/TableHead.module.css\";\n\nconst Thead = () => {\n  const { thead, row, col } = TheadStyles;\n  const [data] = useContext(CollectionContext);\n  const { collection } = data;\n  const headingArr = [\"item\", \"number\", \"price\", \"total price\", \"time stamp\"];\n  return (\n    <thead className={thead}>\n      <tr className={row}>\n        {collection &&\n          headingArr.map((keys, index) => (\n            <th key={index} className={col}>\n              {keys}\n            </th>\n          ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default Thead;\n","import React, { useContext } from \"react\";\nimport { CollectionContext } from \"../../ContextFile/useContext\";\nimport TbodyStyles from \"../../Styles/Tbody.module.css\";\n\nconst Tbody = () => {\n  const { tbody, row, col } = TbodyStyles;\n  const [data, setData] = useContext(CollectionContext); //destructuring context values\n\n  //handling the table row value\n  const handleGetId = ({ index, values }) => {\n    const { item, num, price, totalPrice } = values;\n    setData((data) => ({\n      ...data,\n      item,\n      num,\n      price,\n      totalPrice,\n      keyHolder: index,\n    }));\n  };\n\n  const { collection } = data; //destructuring the collection from state\n  return (\n    <tbody className={tbody}>\n      {collection &&\n        collection.map((values, index) => (\n          <tr\n            key={index}\n            onClick={() => handleGetId({ index, values })}\n            className={row}\n          >\n            <td className={col}>{values.item}</td>\n            <td className={col}>{values.num}</td>\n            <td className={col}>{values.price}</td>\n            <td className={col}>{values.totalPrice}</td>\n            <td className={col}>{new Date().toDateString()}</td>\n          </tr>\n        ))}\n    </tbody>\n  );\n};\n\nexport default Tbody;\n","import React from \"react\";\nimport Thead from \"./Thead\";\nimport Tbody from \"./Tbody\";\nimport TableStyles from \"../../Styles/Table.module.css\";\n\nconst Table = () => {\n  const { table } = TableStyles;\n  return (\n    <table className={table}>\n      <Thead />\n      <Tbody />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useContext } from \"react\";\nimport { CollectionContext } from \"../../ContextFile/useContext\";\nimport ButtonStyles from \"../../Styles/Button.module.css\";\n\nconst ButtonGroup = () => {\n  const { container, buton } = ButtonStyles;\n  const [\n    ,\n    ,\n    ,\n    handleFormSubmit,\n    handleDeleteData,\n    handleEditData,\n    ,\n    handleCache,\n  ] = useContext(CollectionContext);\n  return (\n    <div className={container}>\n      <button className={buton} onClick={handleFormSubmit}>\n        add\n      </button>\n      <button className={buton} onClick={handleEditData}>\n        edit\n      </button>\n      <button className={buton} onClick={handleDeleteData}>\n        del\n      </button>\n      <button className={buton} onClick={handleCache}>\n        clear\n      </button>\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import React, { useContext } from \"react\";\nimport { CollectionContext } from \"../../ContextFile/useContext\";\nimport ButtonGroup from \"../Buttons/ButtonGroup\";\nimport FormStyles from \"../../Styles/Form.module.css\";\n\nconst Form = () => {\n  const { container, form, input } = FormStyles;\n  const [data, , handleChange, , , , handleCalculate, ,] = useContext(\n    CollectionContext\n  );\n\n  return (\n    <div className={container}>\n      <form className={form}>\n        <input\n          type=\"text\"\n          name=\"item\"\n          value={data.item}\n          onChange={handleChange}\n          required={true}\n          placeholder=\"add item name\"\n          className={input}\n          id=\"item\"\n        />\n        <input\n          type=\"number\"\n          name=\"num\"\n          value={data.num}\n          onChange={handleChange}\n          required={true}\n          placeholder=\"add number of item\"\n          className={input}\n        />\n        <input\n          type=\"number\"\n          name=\"price\"\n          value={data.price}\n          onChange={handleChange}\n          onInput={handleCalculate}\n          required={true}\n          className={input}\n          placeholder=\"add item price\"\n        />\n        <input\n          type=\"number\"\n          name=\"totalPrice\"\n          value={data.totalPrice}\n          required={true}\n          readOnly={true}\n          placeholder=\"total price\"\n          className={input}\n        />\n        <input\n          type=\"text\"\n          name=\"timestamp\"\n          value={data.timestamp}\n          required={true}\n          placeholder=\"timestamp\"\n          readOnly={true}\n          className={input}\n        />\n      </form>\n      <ButtonGroup />\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Table from \"../Component/Table/Table\";\nimport Form from \"../Component/Form/Form\";\nimport Data_statisticsStyles from \"../Styles/Data_statistics.module.css\";\n\nconst Data_statistics = () => {\n  const { container, wrapper, heading, content } = Data_statisticsStyles;\n  return (\n    <div className={container}>\n      <div className={wrapper}>\n        <div className={heading}>\n          <h2>take note of your items and expenses with ease!!!</h2>\n        </div>\n        <div className={content}>\n          <Form />\n          <Table />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Data_statistics;\n","import React from \"react\";\nimport DataStatistics from \"./Page/Data_statistics\";\n\nimport { CollectionProvider } from \"./ContextFile/useContext\";\n\nconst App = () => {\n  return (\n    <CollectionProvider>\n      <div className=\"container\">\n        <DataStatistics />\n      </div>\n    </CollectionProvider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}